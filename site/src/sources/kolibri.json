{
  "$schema": "../schemas/design-system.schema.json",
  "lastUpdated": "2024-1-24",
  "name": "KoliBri",
  "description": "KoliBri builds directly on the web standards of the W3C (framework-agnostic), is a generic reference implementation of the WCAG standard and the BITV for accessibility and implemented as a multi-theming capable presentation layer. There is no technical reference and no data transmission functionalities. This means that KoliBri can be reused for the realization of static websites as well as dynamic web applications with different corporate designs and style guides and is therefore very interesting for open source.",
  "url": "https://public-ui.github.io/en/",
  "version": "2.0.3",
  "by": "Informationstechnikzentrum Bund",
  "components": [
    {
      "name": "Abbr",
      "definition": "Die **Abbr**-Komponente implementiert den HTML-Tag `abbr`, wobei hier jedoch der Tooltip barrierefrei ist.\nDer Tooltip für die Beschreibung wird bei Focus oder Hover der **Abbr**-Komponente angezeigt und vorgelesen.",
      "url": "https://public-ui.github.io/en/docs/components/abbr",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        }
      ]
    },
    {
      "name": "Accordion",
      "definition": "Die **Accordion**-Komponente ist ein Aufklapp-Menü. Klickt man auf den Kopfbereich, bestehend aus Icon und Überschrift, klappt der Inhalt mit zusätzlichen Informationen auf. Somit ist es ein interaktives Navigationselement, welches dazu dient, umfangreiche Inhalte platzsparend darzustellen.\n\nAccordions kommen immer dann zum Einsatz, wenn einem thematischen Oberbegriff zugeordnete Inhalte angezeigt oder verborgen werden sollen. Sie erlauben umfangreichere Detailinformationen zu einem Oberbegriff, als es aus Gründen der Übersichtlichkeit eigentlich sinnvoll wäre. Sie überlassen es den Besucher:innen selbst, ob sie sich diese Informationen anzeigen lassen möchten.",
      "url": "https://public-ui.github.io/en/docs/components/accordion",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "level",
          "description": "Defines which H-level from 1-6 the heading has. 0 specifies no heading and is shown as bold text."
        },
        {
          "name": "open",
          "description": "If set (to true) opens/expands the element, closes if not set (or set to false)."
        }
      ]
    },
    {
      "name": "Alert",
      "definition": "Die **Alert**-Komponente gibt ein optisches Feedback an die Nutzer:innen. Sie besteht aus einem farblich gestalteten Container, einer Überschrift, einem Inhaltstext sowie einem Icon. Das verwendete Icon und die farbliche Gestaltung sind abhängig vom Typ `_type` des Alert.",
      "url": "https://public-ui.github.io/en/docs/components/alert",
      "anatomy": [],
      "concepts": [
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        { "name": "has-closer", "description": "Defines whether the element can be closed." },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "level",
          "description": "Defines which H-level from 1-6 the heading has. 0 specifies no heading and is shown as bold text."
        },
        {
          "name": "type",
          "description": "Defines either the type of the component or of the components interactive element."
        },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "Avatar",
      "definition": "Die **Avatar**-Komponente zeigt entweder ein kleines Bild des Users oder dessen Initialen an, falls kein Bild vorhanden ist.",
      "url": "https://public-ui.github.io/en/docs/components/avatar",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "src", "description": "Sets the image `src` attribute to the given string." }
      ]
    },
    {
      "name": "Badge",
      "definition": "Mit **Badges** können Sie bestimmte Informationen auf Ihrer Webseite optisch hervorheben.\nKoliBri bietet neben der Angabe der Hintergrundfarbe und automatischer Berechnung der Textfarbe auch die Möglichkeit, einem Badge ein Icon und/oder einen anderen Schriftschnitt mitzugeben.",
      "url": "https://public-ui.github.io/en/docs/components/badge",
      "anatomy": [],
      "concepts": [
        { "name": "color", "description": "Defines the backgroundColor and foregroundColor." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        }
      ]
    },
    {
      "name": "Breadcrumb",
      "definition": "Mit Hilfe der **Breadcrumb**-Komponente kann der Pfad zur aktuellen Position einer Webseite in einer hierarchischen Struktur dargestellt werden.",
      "url": "https://public-ui.github.io/en/docs/components/breadcrumb",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "links",
          "description": "Defines the list of links combined with their labels to render."
        }
      ]
    },
    {
      "name": "Button",
      "definition": "**Buttons** dienen dazu, Benutzer:innen Auswahlmöglichkeiten für Aktionen anzuzeigen und diese in einer klaren Hierarchie anzuordnen. Sie helfen Nutzer:innen, die wichtigsten Aktionen einer Seite oder innerhalb eines Viewports zu finden und ermöglichen es ihnen, diese Aktionen auszuführen. Die Beschriftung des Buttons wird verwendet, um Nutzer:innen klar anzuzeigen, welche Aktion ausgelöst wird. Buttons ermöglichen es Nutzer:innen, eine Änderung zu bestätigen, Schritte in einer Aufgabe abzuschließen oder Entscheidungen zu treffen.",
      "url": "https://public-ui.github.io/en/docs/components/button",
      "anatomy": [],
      "concepts": [
        { "name": "access-key", "description": "Defines the elements access key." },
        {
          "name": "aria-controls",
          "description": "Defines which elements are controlled by this component. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls)"
        },
        {
          "name": "aria-expanded",
          "description": "Defines whether the interactive element of the component expanded something. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)"
        },
        {
          "name": "aria-selected",
          "description": "Defines whether the interactive element of the component is selected (e.g. role=tab). (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected)"
        },
        {
          "name": "custom-class",
          "description": "Defines the custom class attribute if _variant=\"custom\" is set."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "role", "description": "Defines the role of the components primary element." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        {
          "name": "type",
          "description": "Defines either the type of the component or of the components interactive element."
        },
        { "name": "value", "description": "Defines the value that the button emits on click." },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "ButtonLink",
      "definition": "Der ButtonLink ist semantisch ein Button und hat das Design eines Links. Hierzu werden alle relevanten Properties der Button-Komponente übernommen und um die Design-bestimmenden Properties des Links erweitert.\n\nEinen Button kann man deaktivieren und daher gibt es bei einem ButtonLink das Property `_disabled`. Wie das optisch ausgestaltet wird, entscheidet die UX-Designer:in.\n\nStatt, wie bei einem Link, `_href` zu verwenden, wird bei einem ButtonLink das Property über den `Click-Callback` gesteuert. Hierzu wird das `_on`-Property verwendet.\n\nBei einem Link gibt es das Property `target`, welches ggf. den Link in einem neuen Fenster/Tab öffnet. Das Verhalten ist aktuell noch nicht umgesetzt.\n\nDa der Link, nicht wie der Button, in mehrere Varianten (`primary` oder `secondary` usw.) angeboten wird, stehen die Properties `_customClass` und `_variant` nicht zur Verfügung.",
      "url": "https://public-ui.github.io/en/docs/components/button-link",
      "anatomy": [],
      "concepts": [
        { "name": "access-key", "description": "Defines the elements access key." },
        {
          "name": "aria-controls",
          "description": "Defines which elements are controlled by this component. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls)"
        },
        {
          "name": "aria-expanded",
          "description": "Defines whether the interactive element of the component expanded something. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)"
        },
        {
          "name": "aria-selected",
          "description": "Defines whether the interactive element of the component is selected (e.g. role=tab). (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected)"
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "role", "description": "Defines the role of the components primary element." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        {
          "name": "type",
          "description": "Defines either the type of the component or of the components interactive element."
        },
        { "name": "value", "description": "Defines the value that the button emits on click." }
      ]
    },
    {
      "name": "Card",
      "definition": "Um einzelne Bereiche Ihrer Webseite optisch hervorzuheben, bietet sich die **Card**-Komponente an. Mit ihrer Hilfe können Sie Ihre Inhalte sehr einfach strukturieren.\n\nDie **Card**-Komponente besteht aus einem **_Titel-Bereich_**, einem **_Inhalts-Bereich_**.\n\nDer **Titel-Bereich** wird in einer größeren Schrift dargestellt. Der **Inhalts-Bereich** ist optisch durch eine horizontale Trennlinie unterhalb des Titel-Bereichs abgetrennt und wird in der Standardschrift ausgegeben.",
      "url": "https://public-ui.github.io/en/docs/components/card",
      "anatomy": [],
      "concepts": [
        { "name": "has-closer", "description": "Defines whether the element can be closed." },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "level",
          "description": "Defines which H-level from 1-6 the heading has. 0 specifies no heading and is shown as bold text."
        }
      ]
    },
    {
      "name": "Details",
      "definition": "Mit Hilfe der **Detail**-Komponente können weiterführende Informationen zunächst mit einem kurzen Einleitungstext angezeigt werden, die erst nach Klick\ndurch die Nutzer:innen auf ein Pfeil-Icon in voller Größe aufgeklappt werden.\n\nDie **Detail**-Komponente stellt sich standardmäßig als einzeiliges Layout-Element dar, das aus einem Pfeil-Icon und einem nachfolgenden,\nkurzen Einleitungstext gebildet wird. Der eigentliche Inhalt der Komponente wird erst nach Klick auf den Kopfbereich nach unten hin geöffnet. Das Pfeil-Icon ändert dabei\nseine Ausrichtung von **_rechts_** nach **_unten_**.\nAnalog lässt sich die Komponente auch wieder schließen und der Inhalt damit verbergen.",
      "url": "https://public-ui.github.io/en/docs/components/details",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "open",
          "description": "If set (to true) opens/expands the element, closes if not set (or set to false)."
        }
      ]
    },
    {
      "name": "Form",
      "definition": "Die **Form**-Komponente dient dazu alle Eingabefelder zu umschließen, den Hinweistext für Pflichtfelder korrekt zu positionieren und die Events `submit` und `reset` weiterzuleiten.",
      "url": "https://public-ui.github.io/en/docs/components/form",
      "anatomy": [],
      "concepts": [
        {
          "name": "required-text",
          "description": "Defines whether the mandatory-fields-hint should be shown. A string overrides the default text."
        }
      ]
    },
    {
      "name": "Heading",
      "definition": "Die **Heading**-Komponente kann überall dort verwendet werden, wo eine Überschrift angezeigt werden soll. Durch die Verwendung der unterschiedlichen Größen, lassen sich Inhalte klar strukturieren und Seiten wirkungsvoll und abwechslungsreich präsentieren. Sie trennt Styling von Semantik und ermöglicht Flexibilität.",
      "url": "https://public-ui.github.io/en/docs/components/heading",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        {
          "name": "level",
          "description": "Defines which H-level from 1-6 the heading has. 0 specifies no heading and is shown as bold text."
        },
        {
          "name": "secondary-headline",
          "description": "Defines the text of the secondary headline."
        },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "Icon",
      "definition": "Mit Hilfe der **Icon**-Komponente können Icons aus eingebundenen Icon-Fonts an beliebigen Positionen dargestellt werden. Die Ausgabe des Icon kann über das Attribut **`_icon`** gesteuert werden und erfolgt durch das Attribut **`_label`** barrierefrei. Die Ausgabe erfolgt standardmäßig als _`inline`_-Element.\n\nAktuell werden die Icons von <kol-link _href=\"https://microsoft.github.io/vscode-codicons/dist/codicon.html\" _target=\"_blank\" _label=\"Codicons\"></kol-link> unterstützt.\n\n<kol-alert _heading=\"Hinweis\" _type=\"info\">Es ist wichtig, dass in der Rahmenseite (`index.html`) die CSS-Dateie(n) der Icon-Font(s) eingebunden ist/sind.</kol-alert>",
      "url": "https://public-ui.github.io/en/docs/components/icon",
      "anatomy": [],
      "concepts": [
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        }
      ]
    },
    {
      "name": "Image",
      "definition": "> <kol-badge _label=\"untested\"></kol-badge> Diese neue Komponente wird als ungetestet markiert, da der vollständige Barrierefreiheitstest noch aussteht. Der vollständige Test kann bei neuen Komponenten und Funktionalitäten auch erst nach einem abgeschlossenen Release erfolgen.\n\nDie **Image**-Komponente dient dazu, Bilder darzustellen.",
      "url": "https://public-ui.github.io/en/docs/components/image",
      "anatomy": [],
      "concepts": [
        { "name": "alt", "description": "Setzt den alternativen Text." },
        { "name": "loading", "description": "Defines the loading mode for the image." },
        {
          "name": "sizes",
          "description": "Defines the image sizes for different screen resolutions, supporting _srcset."
        },
        { "name": "src", "description": "Sets the image `src` attribute to the given string." },
        {
          "name": "srcset",
          "description": "Setzt eine Liste von Quell-URLs mit Breiten der Bilder."
        }
      ]
    },
    {
      "name": "IndentedText",
      "definition": "Heben Sie einzelne Informationen auf Ihrer Webseite optisch mit der **IndentedText**-Komponente hervor. Die Komponente eignet sich nicht nur für besondere Abschnitte auf der Webseite, sondern auch beispielsweise für Zitate (für verlinkte Zitate kann auch die <kol-link _href=\"/docs/components/quote/\" _label=\"/docs/components/quote/\" _label=\"kol-quote-Komponente\"></kol-link> verwendet werden.).",
      "url": "https://public-ui.github.io/en/docs/components/indented-text",
      "anatomy": [],
      "concepts": []
    },
    {
      "name": "InputCheckbox",
      "definition": "Der Input-Typ **_Checkbox_** generiert eine rechteckige Box, die durch Anklicken aktiviert und wieder deaktiviert wird. In aktiviertem Zustand befindet sich ein farbiger Haken in der Box.",
      "url": "https://public-ui.github.io/en/docs/components/input-checkbox",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "checked",
          "description": "Defines whether the checkbox is checked or not. Can be read and written."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "indeterminate",
          "description": "Puts the checkbox in the indeterminate state, does not change the value of _checked."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "InputColor",
      "definition": "Der Input-Typ **Color** erzeugt ein Auswahlfeld für die Definition einer beliebigen Farbe. Die Eingabe der Farbe kann in hexadezimaler Schreibweise, in RGB-Schreibweise oder in HSL-Schreibweise erfolgen. Möglich ist die Auswahl einer Farbe über einen Picker oder auch die exakte Eingabe von Farbwerten.",
      "url": "https://public-ui.github.io/en/docs/components/input-color",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "name", "description": "Defines the technical name of an input field." },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        { "name": "suggestions", "description": "Suggestions to provide for the input." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputDate",
      "definition": "Der Input-Typ **Date** erzeugt ein Eingabefeld für Datumswerte. Diese können konkrete Daten sein, aber auch Wochen, Monate oder Zeitangaben.",
      "url": "https://public-ui.github.io/en/docs/components/input-date",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max", "description": "Defines the largest possible input value." },
        { "name": "min", "description": "Defines the smallest possible input value." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "read-only", "description": "Makes the input element read only." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        { "name": "step", "description": "Defines the step size for value changes." },
        { "name": "suggestions", "description": "Suggestions to provide for the input." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        {
          "name": "type",
          "description": "Defines either the type of the component or of the components interactive element."
        },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputEmail",
      "definition": "Der Input-Typ **E-Mail** erzeugt ein Eingabefeld für E-Mails.",
      "url": "https://public-ui.github.io/en/docs/components/input-email",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "has-counter",
          "description": "Shows the character count on the lower border of the input."
        },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max-length", "description": "Defines the maximum number of input characters." },
        { "name": "multiple", "description": "Makes the input accept multiple inputs." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "pattern", "description": "Defines a validation pattern for the input field." },
        {
          "name": "placeholder",
          "description": "Defines the placeholder for input field. To be shown when there's no value."
        },
        { "name": "read-only", "description": "Makes the input element read only." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        { "name": "suggestions", "description": "Suggestions to provide for the input." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputFile",
      "definition": "Der Input-Typ **File** erzeugt ein Eingabefeld für zum Beispiel Uploads. Es können eine oder auch mehrere Dateien ausgewählt werden.",
      "url": "https://public-ui.github.io/en/docs/components/input-file",
      "anatomy": [],
      "concepts": [
        { "name": "accept", "description": "Defines which file formats are accepted." },
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "multiple", "description": "Makes the input accept multiple inputs." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputNumber",
      "definition": "Der Input-Typ **Number** erzeugt ein Eingabefeld für Zahlen.",
      "url": "https://public-ui.github.io/en/docs/components/input-number",
      "anatomy": [],
      "concepts": [
        {
          "name": "basic",
          "image": "kolibri-input-number-basic.png"
        },
        {
          "name": "disabled",
          "description": "Setzt das Feld in einen inaktiven Zustand, in dem es keine Interaktion erlaubt.",
          "image": "kolibri-input-number-disabled.png"
        },
        {
          "name": "hovered",
          "image": "kolibri-input-number-hovered.png"
        },
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max", "description": "Defines the largest possible input value." },
        { "name": "min", "description": "Defines the smallest possible input value." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        {
          "name": "placeholder",
          "description": "Defines the placeholder for input field. To be shown when there's no value."
        },
        {
          "name": "read-only",
          "openUIName": "readonly",
          "description": "Setzt das Eingabefeld in den schreibgeschützten Modus."
        },
        {
          "name": "required",
          "description": "Makes the input element required."
        },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        { "name": "step", "description": "Defines the step size for value changes." },
        { "name": "suggestions", "description": "Suggestions to provide for the input." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputPassword",
      "definition": "Der Input-Typ **Password** erzeugt ein Eingabefeld für Passwörter. Die Eingabe wird über Punktsymbole maskiert.",
      "url": "https://public-ui.github.io/en/docs/components/input-password",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "has-counter",
          "description": "Shows the character count on the lower border of the input."
        },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max-length", "description": "Defines the maximum number of input characters." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "pattern", "description": "Defines a validation pattern for the input field." },
        {
          "name": "placeholder",
          "description": "Defines the placeholder for input field. To be shown when there's no value."
        },
        { "name": "read-only", "description": "Makes the input element read only." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputRadio",
      "definition": "Die Komponente **InputRadio** besteht aus einer Sammlung von Radio-Elementen und stellt so eine Auswahlmöglichkeit zwischen verschiedenen Werten dar. Es kann immer nur ein einzelner Wert zur gleichen Zeit ausgewählt werden. Ausgewählte Radio-Elemente werden i.d.R. mit einem gefüllten und optisch hervorgehobenen Kreis dargestellt.\n\n<kol-alert _alert _heading=\"Hinweis\" _level=\"1\" _type=\"info\">\n  Das Input-Radio dient der Abbildung einer Auswahlmöglichkeit bei der mindestens und maximal eine Auswahl getroffen werden kann. Das bedeutet, dass ein Input-Radio nicht einzeln vorkommen kann. Aufgrund dessen haben wir die Komponente als Listen-Komponente umgesetzt.\n</kol-alert><br/>",
      "url": "https://public-ui.github.io/en/docs/components/input-radio",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "options", "description": "Options the user can choose from." },
        {
          "name": "orientation",
          "description": "Defines whether the orientation of the component is horizontal or vertical."
        },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputRange",
      "definition": "Der Input-Typ **Range** erzeugt ein interaktives Element, mit dem Werte durch Verschieben eines Reglers verändert werden können.",
      "url": "https://public-ui.github.io/en/docs/components/input-range",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max", "description": "Defines the largest possible input value." },
        { "name": "min", "description": "Defines the smallest possible input value." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "step", "description": "Defines the step size for value changes." },
        { "name": "suggestions", "description": "Suggestions to provide for the input." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "InputText",
      "definition": "Der Input-Typ **Text** erzeugt ein Eingabefeld für normalen Text, Suchbegriffe, URLs oder Telefonnummern.",
      "url": "https://public-ui.github.io/en/docs/components/input-text",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "auto-complete",
          "description": "Defines whether the input can be auto-completed."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "has-counter",
          "description": "Shows the character count on the lower border of the input."
        },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max-length", "description": "Defines the maximum number of input characters." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "pattern", "description": "Defines a validation pattern for the input field." },
        {
          "name": "placeholder",
          "description": "Defines the placeholder for input field. To be shown when there's no value."
        },
        { "name": "read-only", "description": "Makes the input element read only." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "smart-button",
          "description": "Allows to add a button with an arbitrary action within the element (_hide-label only)."
        },
        { "name": "suggestions", "description": "Suggestions to provide for the input." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        {
          "name": "type",
          "description": "Defines either the type of the component or of the components interactive element."
        },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "Link",
      "definition": "Die **Link**-Komponente rendert einen auf Barrierefreiheit optimierten Link, der als Text, als Icon oder auch in Kombination ausgegeben werden kann.\n\nBeachten Sie, dass die Komponente automatisch ein Padding links und rechts zum umgebenden Text erzeugt. Sie kann daher im Fließtext ohne\nEingabe von Leerzeichen eingefügt werden. Zusätzliche Leerzeichen vergrößern den Abstand zum umgebenden Text.",
      "url": "https://public-ui.github.io/en/docs/components/link",
      "anatomy": [],
      "concepts": [
        { "name": "access-key", "description": "Defines the elements access key." },
        {
          "name": "aria-current-value",
          "description": "Defines the value for the aria-current attribute."
        },
        {
          "name": "download",
          "description": "Tells the browser that the link contains a file. Optionally sets the filename."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "href", "description": "Sets the target URI of the link or citation source." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "role", "description": "Defines the role of the components primary element." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        { "name": "target", "description": "Defines where to open the link." },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        }
      ]
    },
    {
      "name": "LinkButton",
      "definition": "Der LinkButton ist semantisch ein Link und hat das Design eines Buttons. Hierzu werden alle relevanten Properties der Link-Komponente übernommen und um die Design-bestimmenden Properties des Buttons erweitert.\nWeitere Informationen zum Aussehen finden Sie auf der <kol-link _href=\"/docs/components/button\" _label=\"/docs/components/button\" _label=\"Seite des Buttons\"></kol-link>.",
      "url": "https://public-ui.github.io/en/docs/components/link-button",
      "anatomy": [],
      "concepts": [
        { "name": "access-key", "description": "Defines the elements access key." },
        {
          "name": "aria-current-value",
          "description": "Defines the value for the aria-current attribute."
        },
        {
          "name": "custom-class",
          "description": "Defines the custom class attribute if _variant=\"custom\" is set."
        },
        {
          "name": "download",
          "description": "Tells the browser that the link contains a file. Optionally sets the filename."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "href", "description": "Defines the target URI of the link." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "role", "description": "Defines the role of the components primary element." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        { "name": "target", "description": "Defines where to open the link." },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "Modal",
      "definition": "Vielen Dank, dass Sie diese Komponente zur Umsetzung eines Modals verwenden wollen. Inzwischen ist das native `<dialog>` Element sehr gut unterstützt (<kol-link _href=\"https://caniuse.com/?search=dialog\" _target=\"_blank\" _label=\"caniuse\"></kol-link>), barrierefrei, einfach zu benutzen und performanter (da nativ), daher empfehlen wir dieses zu verwenden. Wenn Sie aufgrund von Abwärtskompatibilität, oder weil Sie die **Modal**-Komponente bereits eingebaut haben, die Dokumentation zu unserem KolModal suchen, finden Sie diese etwas weiter unten. Die **Modal**-Komponente wird in Version 2 noch zur Verfügung stehen.",
      "url": "https://public-ui.github.io/en/docs/components/modal",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "width", "description": "Defines the width of the modal. (max-width: 100%)" }
      ]
    },
    {
      "name": "Nav",
      "definition": "Eine **Navigationsleiste** ist eine Gruppe von verwandten Links oder Navigationselementen, die durch Anklicken eine Aktion ausführen oder Inhalte anzeigen. Sie navigiert Nutzer:innen direkt zu bestimmten Inhalten der aktuellen Seite oder zu externen Seiten. Außerdem dient sie Nutzer:innen (ähnlich wie Registerkarten) als Steuerelement, um Inhalte anzuzeigen, auszublenden und zwischen ihnen zu wechseln.\n\n**KoliBri** stellt eine umfangreich konfigurierbare, vertikale oder horizontale **Navigationsleiste** zur Verfügung, die mehrere Ebenen darstellen und in der Breite variiert werden kann.\nÜbergeordnete Menüpunkte die Untermenüpunkte enthalten, werden mit einem **Plus-Icon** am rechten Rand angezeigt. Wird der übergeordnete Menüpunkt mit dem Plus-Icon geöffnet, ändert sich das Plus-Icon automatisch zu einem **Minus-Icon**, mit dem der Menüpunkt wieder geschlossen werden kann.\n\nAktive Menüpunkte werden mit einer farbigen Markierung dargestellt.\n\nÜber eine optionale Schaltfläche unterhalb der Navigation kann die Breite der **Nav**-Komponente verändert werden. In der kleinsten Breite werden die Menütitel ausgeblendet und nur\nnoch die Icons ausgegeben.",
      "url": "https://public-ui.github.io/en/docs/components/nav",
      "anatomy": [],
      "concepts": [
        {
          "name": "collapsible",
          "description": "Defines if navigation nodes can be collapsed or not. Enabled by default."
        },
        {
          "name": "has-compact-button",
          "description": "Gibt an, ob die Navigation eine zusätzliche Schaltfläche zum Aus- und Einklappen der Navigation anzeigen soll."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "links",
          "description": "Defines the list of links, buttons or texts to render."
        },
        {
          "name": "orientation",
          "description": "Defines whether the orientation of the component is horizontal or vertical."
        }
      ]
    },
    {
      "name": "Pagination",
      "definition": "Mit Hilfe der **Paginierung**-Komponente lassen sich umfangreiche, aufgeteilte Inhalte, wie zum Beispiel Suchergebnisse, der Reihe nach durchlaufen.",
      "url": "https://public-ui.github.io/en/docs/components/pagination",
      "anatomy": [],
      "concepts": [
        {
          "name": "boundary-count",
          "description": "Defines the amount of pages to show next to the outer arrow buttons."
        },
        {
          "name": "custom-class",
          "description": "Defines the custom class attribute if _variant=\"custom\" is set."
        },
        {
          "name": "has-buttons",
          "description": "Defines which navigation buttons to render (first, last, next, previous buttons)."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "max", "description": "Defines the maximum number of pages." },
        { "name": "page", "description": "Defines the current page." },
        { "name": "page-size", "description": "Defines the amount of entries to show per page." },
        {
          "name": "page-size-options",
          "description": "Defines the options for the page-size-select."
        },
        {
          "name": "sibling-count",
          "description": "Defines the amount of pages to show next to the current page."
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        }
      ]
    },
    {
      "name": "Progress",
      "definition": "Die **Progress**-Komponente erzeugt einen Fortschrittsbalken, über den eine optische Rückmeldung gegeben werden kann.",
      "url": "https://public-ui.github.io/en/docs/components/progress",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "max",
          "description": "Defines at which value the progress display is completed."
        },
        { "name": "unit", "description": "Defines the unit of the step values (not shown)." },
        { "name": "value", "description": "Defines the progress." },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "Quote",
      "definition": "> <kol-badge _label=\"untested\"></kol-badge> Diese neue Komponente wird als ungetestet markiert, da der vollständige Barrierefreiheitstest noch aussteht. Der vollständige Test kann bei neuen Komponenten und Funktionalitäten auch erst nach einem abgeschlossenen Release erfolgen.\n\nDie **Quote**-Komponente verfügt über zwei Varianten, eine kurze Fließtext-(`inline`) und eine eingerückte(`block`) Variante. Beide Varianten enthalten einen Link auf die Quelle des Zitates.",
      "url": "https://public-ui.github.io/en/docs/components/quote",
      "anatomy": [],
      "concepts": [
        { "name": "href", "description": "Sets the target URI of the link or citation source." },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "quote", "description": "Defines the text of the quote." },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "Select",
      "definition": "Die **Select**-Komponente erzeugt eine Auswahlliste, aus der eine oder mehrere vorgegebene Möglichkeiten ausgewählt werden können.",
      "url": "https://public-ui.github.io/en/docs/components/select",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "multiple", "description": "Makes the input accept multiple inputs." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        {
          "name": "options",
          "description": "Options the user can choose from, also supporting Optgroup."
        },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "rows",
          "description": "Defines how many rows of options should be visible at the same time."
        },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "SkipNav",
      "definition": "Mit Hilfe der **SkipNav**-Komponente kann eine versteckte Navigation erzeugt werden. Sie dient dazu, Sehbehinderten das Überspringen von Seitenbereichen zu ermöglichen. Sie wird nur nach Anspringen durch die **Tab-Taste** sichtbar.",
      "url": "https://public-ui.github.io/en/docs/components/skip-nav",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        {
          "name": "links",
          "description": "Defines the list of links combined with their labels to render."
        }
      ]
    },
    {
      "name": "Spin",
      "definition": "Ladeanzeigen, wie die **Spin**-Komponente, informieren die Nutzer:innen über Lade- oder Rechenvorgänge, die vom System ausgeführt werden. Der Fortschritt kann durch eine wiederholte Animation kommuniziert werden.",
      "url": "https://public-ui.github.io/en/docs/components/spin",
      "anatomy": [],
      "concepts": [
        { "name": "show", "description": "Makes the element show up." },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "SplitButton",
      "definition": "> <kol-badge _label=\"untested\"></kol-badge> Diese neue Komponente wird als ungetestet markiert, da der vollständige Barrierefreiheitstest noch aussteht. Der vollständige Test kann bei neuen Komponenten und Funktionalitäten auch erst nach einem abgeschlossenen Release erfolgen.\n\nDie SplitButton-Komponente kann genutzt werden, um einen zweigeteilten Button darzustellen. Dabei wird der Primär-Button\nüblicherweise für eine Haupt-Aktion genutzt, während der sekundäre Button ein Kontext-Menü (\"Popover\") öffnet, hinter\ndem sich weitere Aktionen verbergen.\n\n- Der Sekundär-Button togglet grundsätzlich das Kontextmenü.\n- Für den Primär-Button kann ein individueller Event-Handler hinterlegt werden, wird dies nicht getan togglet er ebenfalls das Kontextmenü.",
      "url": "https://public-ui.github.io/en/docs/components/split-button",
      "anatomy": [],
      "concepts": [
        {
          "name": "aria-controls",
          "description": "Defines which elements are controlled by this component. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls)"
        },
        {
          "name": "aria-expanded",
          "description": "Defines whether the interactive element of the component expanded something. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)"
        },
        {
          "name": "aria-selected",
          "description": "Defines whether the interactive element of the component is selected (e.g. role=tab). (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected)"
        },
        {
          "name": "custom-class",
          "description": "Defines the custom class attribute if _variant=\"custom\" is set."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        {
          "name": "icons",
          "description": "Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`)."
        },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "name", "description": "Defines the technical name of an input field." },
        { "name": "role", "description": "Defines the role of the components primary element." },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        {
          "name": "type",
          "description": "Defines either the type of the component or of the components interactive element."
        },
        { "name": "value", "description": "Defines the value that the button emits on click." },
        {
          "name": "variant",
          "description": "Defines which variant should be used for presentation."
        }
      ]
    },
    {
      "name": "Symbol",
      "definition": "Die **Symbol**-Komponente ermöglicht das Rendern beliebiger Symbole mit steuerbarer Ausgabe durch den Screenreader.",
      "url": "https://public-ui.github.io/en/docs/components/symbol",
      "anatomy": [],
      "concepts": [
        {
          "name": "label",
          "description": "Sets the visible or semantic label of the component (e.g. Aria label, Label, Headline, Caption, Summary, etc.)."
        },
        {
          "name": "symbol",
          "description": "Dieses Property gibt den String an der angezeigt werden soll."
        }
      ]
    },
    {
      "name": "Table",
      "definition": "Die **Table**-Komponente dient primär der übersichtlichen Darstellung von Datenmengen. Dabei ist sie so ausgelegt, dass sie alle von den Daten abhängige Werte automatisch ermittelt und die Tabelle entsprechend darstellt. Hierzu gehören beispielsweise die optionalen Funktionalitäten Spaltensortierung oder Pagination.\n\n<kol-indented-text _summary=\"Backend-seitige Pagination\">\n\tBei sehr großen Datenmengen ist auch eine manuelle Nutzung der Table-Komponente möglich. Das bedeutet, dass die Tabelle seitenweise \"manuell\" befüllt wird. Hierzu kann einfach anstatt der Table-Pagination eine \"eigene\" Pagination unter der Tabelle mittels der Pagination-Komponente verwendet werden.\n</kol-indented-text>",
      "url": "https://public-ui.github.io/en/docs/components/table",
      "anatomy": [],
      "concepts": [
        { "name": "allow-multi-sort", "description": "Defines whether to allow multi sort." },
        { "name": "data", "description": "Defines the primary table data." },
        { "name": "data-foot", "description": "Defines the data for the table footer." },
        { "name": "headers", "description": "Defines the horizontal and vertical table headers." },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "min-width", "description": "Defines the table min-width." },
        {
          "name": "pagination",
          "description": "Defines whether to show the data distributed over multiple pages."
        }
      ]
    },
    {
      "name": "Tabs",
      "definition": "Die **Tabs**-Komponente wird verwendet, um verwandte Inhalte auf derselben Seite zu organisieren und zwischen ihnen zu navigieren. Tabs sorgen dafür, dass große Inhaltsmengen für Nutzer:innen leichter organisiert werden können. Tabs sind in Registerkartenleisten angeordnet, die als Registerkartengruppen bezeichnet werden, wobei die Registerkartenbeschriftung den Nutzer:innen einen Hinweis darauf gibt, welcher Inhalt angezeigt wird, wenn die Registerkarte ausgewählt wird.",
      "url": "https://public-ui.github.io/en/docs/components/tabs",
      "anatomy": [],
      "concepts": [
        { "name": "align", "description": "Defines the position of the tab captions." },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.)."
        },
        { "name": "selected", "description": "Defines which tab is active." },
        { "name": "tabs", "description": "Defines the tab captions." }
      ]
    },
    {
      "name": "Textarea",
      "definition": "Die Komponente **Textarea** stellt ein größeres Eingabefeld für Inhalte zur Verfügung. Im Gegensatz zum <kol-link _href=\"/docs/components/input-text\" _label=\"/docs/components/input-text\" _label=\"InputText\"></kol-link> können hier auch umfangreiche Inhalte eingegeben werden, die auch mit Zeilenumbrüchen versehen sein können.",
      "url": "https://public-ui.github.io/en/docs/components/textarea",
      "anatomy": [],
      "concepts": [
        {
          "name": "access-key",
          "description": "Defines which key combination can be used to trigger or focus the interactive element of the component."
        },
        {
          "name": "adjust-height",
          "description": "Adjusts the height of the element to its content."
        },
        {
          "name": "alert",
          "description": "Defines whether the screen-readers should read out the notification."
        },
        {
          "name": "disabled",
          "description": "Makes the element not focusable and ignore all events."
        },
        { "name": "error", "description": "Defines the error message text." },
        {
          "name": "has-counter",
          "description": "Shows the character count on the lower border of the input."
        },
        {
          "name": "hide-error",
          "description": "Hides the error message but leaves it in the DOM for the input's aria-describedby."
        },
        {
          "name": "hide-label",
          "description": "Hides the caption by default and displays the caption text with a tooltip when the\ninteractive element is focused or the mouse is over it."
        },
        { "name": "hint", "description": "Defines the hint text." },
        {
          "name": "id",
          "description": "Defines the internal ID of the primary component element."
        },
        {
          "name": "label",
          "description": "Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.). Set to `false` to enable the expert slot."
        },
        { "name": "max-length", "description": "Defines the maximum number of input characters." },
        { "name": "name", "description": "Defines the technical name of an input field." },
        {
          "name": "placeholder",
          "description": "Defines the placeholder for input field. To be shown when there's no value."
        },
        { "name": "read-only", "description": "Makes the input element read only." },
        { "name": "required", "description": "Makes the input element required." },
        {
          "name": "resize",
          "description": "Defines whether and in which direction the size of the input can be changed by the user. (https://developer.mozilla.org/de/docs/Web/CSS/resize)"
        },
        {
          "name": "rows",
          "description": "Defines how many rows of text should be visible at the same time."
        },
        {
          "name": "tab-index",
          "description": "Defines which tab-index the primary element of the component has. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)"
        },
        {
          "name": "tooltip-align",
          "description": "Defines where to show the Tooltip preferably: top, right, bottom or left."
        },
        { "name": "touched", "description": "Shows if the input was touched by a user." },
        { "name": "value", "description": "Defines the value of the input." }
      ]
    },
    {
      "name": "ToastContainer",
      "definition": "Mit dem **Toast**-Service geben Sie ein optisches Feedback an die Nutzer:innen. Sie wird am Kopf des Browserfenster\nangezeigt, bis sie geschlossen wird. Werden mehrere Toasts geöffnet, ohne das die bisherigen geschlossen wurden, so werden diese untereinander angezeigt.",
      "url": "https://public-ui.github.io/en/docs/components/toast-container",
      "anatomy": [],
      "concepts": []
    }
  ]
}
